0,0,-0.2, 0.5, 0, 0,
0, 0, 0, 0, -0.3, 0.6
), nrow = 6)
lambda
lambda <- matrix(c(0.3, 0.4, 0, 0, 0, 0
0,0,-0.2, 0.5, 0, 0,
lambda <- matrix(c(0.3, 0.4, 0, 0, 0, 0,
0,0,-0.2, 0.5, 0, 0,
0, 0, 0, 0, -0.3, 0.6
), nrow = 6)
lambda
beta <- matrix(c(0, 0.5, 0,
0, 0, 0.7,
0, 0, 0),
nrow = 3
)
beta
psi <- matrix(c(1, 0, 0,
0, 1, 0,
0, 0, 1),
nrow = 3)
psi
identity <- diag(3)
identity
theta <- matrix(c(0.4, 0, 0, 0, 0, 0,
0, 0.6, 0, 0, 0, 0,
0, 0, 0.5, 0, 0, 0,
0, 0, 0, 0.2, 0, 0,
0, 0, 0, 0, 0.4, 0,
0, 0, 0, 0, 0, 0.3),
nrow = 6)
theta
id <- diag(3)
lambda %*% solve(id-beta) %*% psi %*% solve(t(id-beta)) %*% t(lambda) + theta
lambda <- matrix(c(0.3, 0.4, 0, 0, 0, 0,
0,0,-0.2, 0.5, 0, 0,
0, 0, 0, 0, -0.3, 0.6
), nrow = 6)
beta <- matrix(c(0, 0.5, 0,
0, 0, 0.7,
0, 0, 0),
nrow = 3
)
psi <- matrix(c(1, 0, 0,
0, 1, 0,
0, 0, 1),
nrow = 3)
id <- diag(3)
theta <- matrix(c(0.4, 0, 0, 0, 0, 0,
0, 0.6, 0, 0, 0, 0,
0, 0, 0.5, 0, 0, 0,
0, 0, 0, 0.2, 0, 0,
0, 0, 0, 0, 0.4, 0,
0, 0, 0, 0, 0, 0.3),
nrow = 6)
lambda %*% solve(id-beta) %*% psi %*% solve(t(id-beta)) %*% t(lambda) + theta
setwd("/Users/lucas/Documents/Master/UvA/SEM II/Assignment 2")
covMat <- as.matrix(read.csv("houghton.csv"))
rownames(covMat) <- colnames(covMat)
View(covMat)
n <- 263
library(lavaan)
c_t =~ evaluation_beliefs + self_talk + mental_imagery
s_w =~ happy + mood1 + mood2
j_s =~ work1 + work2 + work3
d_t ~ c_t
s_w ~ d_t
j_s ~ d_t + s_w
model1 <- '
#latent variable definitions
c_t =~ evaluation_beliefs + self_talk + mental_imagery
s_w =~ happy + mood1 + mood2
d_t =~ perform1 + perform2 + approval
j_s =~ work1 + work2 + work3
#regressions
d_t ~ c_t
s_w ~ d_t
j_s ~ d_t + s_w
'
fit1 <- sem(model1, sample.cov = covMat, sample.nobs = n)
fitMeasures(fit1)
fit2 <- sem(model2, sample.cov = covMat, sample.nobs = n)
model2 <- '
#latent variable definitions
c_t =~ evaluation_beliefs*1 + self_talk + mental_imagery
s_w =~ happy*1 + mood1 + mood2
d_t =~ perform1*1 + perform2 + approval
j_s =~ work1 + work2*1 + work3
#regressions
d_t ~ c_t
s_w ~ d_t
j_s ~ d_t + s_w
'
fit2 <- sem(model2, sample.cov = covMat, sample.nobs = n)
model2 <- '
#latent variable definitions
c_t =~ evaluation_beliefs * 1 + self_talk + mental_imagery
s_w =~ happy * 1 + mood1 + mood2
d_t =~ perform1 * 1 + perform2 + approval
j_s =~ work1 + work2 * 1 + work3
#regressions
d_t ~ c_t
s_w ~ d_t
j_s ~ d_t + s_w
'
fit2 <- sem(model2, sample.cov = covMat, sample.nobs = n)
fitMeasures(fit1)
fit2 <- sem(model2, sample.cov = covMat, sample.nobs = n)
model2 <- '
#latent variable definitions
c_t =~ 1*evaluation_beliefs + self_talk + mental_imagery
s_w =~ 1*happy + mood1 + mood2
d_t =~ 1*perform1 + perform2 + approval
j_s =~ 1*work1 + work2 * 1 + work3
#regressions
d_t ~ c_t
s_w ~ d_t
j_s ~ d_t + s_w
'
fit2 <- sem(model2, sample.cov = covMat, sample.nobs = n)
model2 <- '
#latent variable definitions
c_t =~ 1*evaluation_beliefs + self_talk + mental_imagery
s_w =~ 1*happy + mood1 + mood2
d_t =~ 1*perform1 + perform2 + approval
j_s =~ 1*work1 + work2 + work3
#regressions
d_t ~ c_t
s_w ~ d_t
j_s ~ d_t + s_w
'
fit2 <- sem(model2, sample.cov = covMat, sample.nobs = n)
fitMeasures(fit1)
anova(fit1,fit1)
anova(fit1,fit2)
anova(fit1, fit2)
anova(fit1, fit2)
library(semPlot)
semPaths(fit1)
library(semPlot)
semPaths(fit1)
semPaths(fit1)
lambda <- matrix(c(0.3, 0.4, 0, 0, 0, 0,
0,0,-0.2, 0.5, 0, 0,
0, 0, 0, 0, -0.3, 0.6
), nrow = 6)
beta <- matrix(c(0, 0.5, 0,
0, 0, 0.7,
0, 0, 0),
nrow = 3
)
psi <- matrix(c(1, 0, 0,
0, 1, 0,
0, 0, 1),
nrow = 3)
id <- diag(3)
theta <- matrix(c(0.4, 0, 0, 0, 0, 0,
0, 0.6, 0, 0, 0, 0,
0, 0, 0.5, 0, 0, 0,
0, 0, 0, 0.2, 0, 0,
0, 0, 0, 0, 0.4, 0,
0, 0, 0, 0, 0, 0.3),
nrow = 6)
sigma <-  lambda %*% solve(id-beta) %*% psi %*% solve(t(id-beta)) %*% t(lambda) + theta
sigma
install.packages("httr")
install.packages("jsonlite")
#packages
library(httr)
library(jsonlite)
res = GET("https://api.open-notify.org/astros.json")
res = GET("https://api.open-notify.org/astros.json")
res = GET("https://api.open-notify.org/astros.json")
data <- GET("https://api.covidactnow.org/v2/county/06037.timeseries.json?apiKey=xyxyxy
")
data <- GET("https://api.covidactnow.org/v2/county/06037.timeseries.json?apiKey=xyxyxy")
devtools::create("airquality")
devtools::build("airquality")
setwd("/Users/lucas/Documents/Master/UvA/Programming Next Step/lucasproject")
devtools::build("airquality")
devtools::create("airquality")
devtools::build()
setwd("~/Documents/Master/UvA/Programming Next Step/lucasproject/airquality")
devtools::build()
usethis::use_mit_license()
devtools::build()
devtools::install()
airquality::test_function
devtools::build()
devtools::document()
devtools::install()
airquality::test_function()
geocode_base <- 'http://api.openweathermap.org/geo/1.0/direct?q='
geocode_city <- 'Amsterdam,'
geocode_country_code <- ",NL"
geocode_limit <- '&limit=1&appid='
geocode_appid <- '03782ca206139ca19d564d33c2813127'
geocode_url <- paste0(
geocode_base,
geocode_city,
geocode_country_code,
geocode_limit,
geocode_appid
)
geocode_raw <- GET(geocode_url)
geocode_char <- rawToChar(geocode_raw$content)
geocode_dat <- fromJSON(geocode_char)
geocode_dat
output$coord_out <- renderTable({
geocode_base <- 'http://api.openweathermap.org/geo/1.0/direct?q='
geocode_city <- 'Amsterdam,'
geocode_country_code <- ",NL"
geocode_limit <- '&limit=1&appid='
geocode_appid <- '03782ca206139ca19d564d33c2813127'
geocode_url <- paste0(
geocode_base,
geocode_city,
geocode_country_code,
geocode_limit,
geocode_appid
)
geocode_raw <- GET(geocode_url)
geocode_char <- rawToChar(geocode_raw$content)
geocode_dat <- fromJSON(geocode_char)
geocode_dat
geocode_base <- 'http://api.openweathermap.org/geo/1.0/direct?q='
geocode_city <- 'Amsterdam,'
geocode_country_code <- ",NL"
geocode_limit <- '&limit=1&appid='
geocode_appid <- '03782ca206139ca19d564d33c2813127'
geocode_url <- paste0(
geocode_base,
geocode_city,
geocode_country_code,
geocode_limit,
geocode_appid
)
geocode_raw <- GET(geocode_url)
geocode_char <- rawToChar(geocode_raw$content)
geocode_dat <- fromJSON(geocode_char)
geocode_dat
print()
geocode_base <- 'http://api.openweathermap.org/geo/1.0/direct?q='
geocode_city <- 'Amsterdam,'
geocode_country_code <- ",NL"
geocode_limit <- '&limit=1&appid='
geocode_appid <- '03782ca206139ca19d564d33c2813127'
geocode_url <- paste0(
geocode_base,
geocode_city,
geocode_country_code,
geocode_limit,
geocode_appid
)
geocode_raw <- GET(geocode_url)
geocode_char <- rawToChar(geocode_raw$content)
geocode_dat <- fromJSON(geocode_char)
geocode_dat
library(httr)
library(jsonlite)
geocode_base <- 'http://api.openweathermap.org/geo/1.0/direct?q='
geocode_city <- 'Amsterdam,'
geocode_country_code <- ",NL"
geocode_limit <- '&limit=1&appid='
geocode_appid <- '03782ca206139ca19d564d33c2813127'
geocode_url <- paste0(
geocode_base,
geocode_city,
geocode_country_code,
geocode_limit,
geocode_appid
)
geocode_raw <- GET(geocode_url)
geocode_char <- rawToChar(geocode_raw$content)
geocode_dat <- fromJSON(geocode_char)
geocode_dat
View(geocode_dat)
View(geocode_dat)
devtools::document()
devtools::build()
devtools::load_all()
airquality::current_aq("Amsterdam", "NL")
?airquality
?current_aq
history_aq("Amsterdam", "NL")
devtools::build()
devtools::document()
devtools::load_all()
?history_aq
devtools::document()
?airquality
detach("package:datasets", unload = TRUE)
?airquality
devtools::build()
devtools::document()
devtools::load_all()
?airquality
devtools::build()
devtools::document()
devtools::load_all()
?airquality
devtools::document()
?airquality
history_aq("Berlin", "GER")
history_aq("Mumbai", "IND")
history_aq("Mumbai", "IND")
history_aq("Mumbai", "IsdD")
history_aq("Mumbai", "IsdD")asd
history_aq <- function(city, country){
#testing the function
#city <- "Amsterdam"
#country <- "NL"
#geocoding
geocode_base <- 'http://api.openweathermap.org/geo/1.0/direct?q='
geocode_limit <- '&limit=1&appid='
geocode_appid <- '03782ca206139ca19d564d33c2813127'
geocode_url <- paste0(
geocode_base,
city,
",",
country,
geocode_limit,
geocode_appid
)
geocode_raw <- GET(geocode_url)
geocode_char <- rawToChar(geocode_raw$content)
geocode_dat <- fromJSON(geocode_char)
lat_number <- geocode_dat[1,3]
lon_number <- geocode_dat[1,4]
#get time stamps
current_time <- Sys.time()
current_time_unix <- as.numeric(as.POSIXct(current_time))
current_time_unix_r <- round(current_time_unix,0)
two_weeks_back <- Sys.time() - weeks(2)
two_weeks_back_unix <- as.numeric(as.POSIXct(two_weeks_back))
two_weeks_back_unix_r <- round(two_weeks_back_unix, 0)
#get history aq data
hist_aq_url_1 <- "http://api.openweathermap.org/data/2.5/air_pollution/history?lat="
lat_number
hist_aq_url_2 <- "&lon="
lon_number
hist_aq_url_3 <- "&start="
hist_aq_url_4 <- "&end="
hist_aq_url_5 <- "&appid="
appid <- '03782ca206139ca19d564d33c2813127'
hist_aq_url <- paste0(hist_aq_url_1,
lat_number,
hist_aq_url_2,
lon_number,
hist_aq_url_3,
two_weeks_back_unix_r,
hist_aq_url_4,
current_time_unix_r,
hist_aq_url_5,
appid)
hist_aq_raw <- GET(hist_aq_url)
hist_aq_char <- rawToChar(hist_aq_raw$content)
hist_aq_dat <- fromJSON(hist_aq_char)
#converting to data frame
hist_aqi_df <- hist_aq_dat[['list']][['main']]
hist_comp_df <- hist_aq_dat[['list']][['components']]
#plotting
hist_comp_df$time <- seq(1:nrow(hist_comp_df))
hist_comp_df %>%
ggplot(aes(x = time, y = co)) +
geom_line()
}
history()
history_aq("Berlin", "GER")
history_aq("Mumbai", "IND")
history_aq("Berlin", "GER")
usethis::use_testthat()
usethis::use_test('airquality')
airquality::current_aq("Amsterdam", "NL")
airquality(234)
airquality::current_aq(13)
test <- data.frame(1,2,3)
mode(test)
is.data.frame(test)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::build()
devtools::load_all()
devtools::test()
devtools::test()
devtools::test()
library(airquality)
context('Core functions')
test_that('airquality returns two data frames', {
aq_call <- current_aq("Amsterdam", "NL")
expect_true(is.data.frame(df))
})
library(airquality)
context('Core functions')
test_that('airquality returns two data frames', {
aq_call <- current_aq("Amsterdam", "NL")
expect_true(is.data.frame(df))
})
current_aq <- function(city, country){
#geocoding
geocode_base <- 'http://api.openweathermap.org/geo/1.0/direct?q='
geocode_limit <- '&limit=1&appid='
geocode_appid <- '03782ca206139ca19d564d33c2813127'
geocode_url <- paste0(
geocode_base,
city,
",",
country,
geocode_limit,
geocode_appid
)
geocode_raw <- GET(geocode_url)
geocode_char <- rawToChar(geocode_raw$content)
geocode_dat <- fromJSON(geocode_char)
#print(geocode_dat[1 , c(3,4)])
#current airquality
base <- 'http://api.openweathermap.org/data/2.5/'
which <- 'air_pollution?'
lat <- 'lat='
lat_number <- geocode_dat[1,3]
lon <- '&lon='
lon_number <- geocode_dat[1,4]
appid <- '&appid=03782ca206139ca19d564d33c2813127'
url <- paste0(base,
which,
lat,
lat_number,
lon,
lon_number,
appid
)
current_aq_raw <- GET(url)
current_aq_char <- rawToChar(current_aq_raw$content)
current_aq <- fromJSON(current_aq_char)
#converting to data frame
current_aqi_df <- current_aq[['list']][['main']]
current_aq_comp_df <- current_aq[['list']][['components']]
return(current_aqi_df)
return(current_aq_comp_df)
}
current_aq("Amsterdam", "NL")
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
a <- list(1:10, letters)
str(a)
test_df <- current_aq("Amsterdam", "NL")
View(test_df)
current_aq("Amsterdam", "NL")
is.data.frame(test_df)
devtools::test()
current_aq("Amsterdam", "NL")
history_aq("Berlin", "GER")
devtools::build()
devtools::document(+)
devtools::document()
devtools::test()
devtools::test()
devtools::test()
devtools::build()
devtools::document()
devtools::build()
devtools::document()
devtools::build()
devtools::document()
devtools::build()
devtools::document()
devtools::document()
devtools::build()
devtools::document()
devtools::document()
devtools::build()
devtools::document()
devtools::document()
devtools::build()
library(airquality)
library(airquality)
devtools::document()
library(airquality)
devtools::build()
devtools::document()
devtools::document()
devtools::build()
devtools::document()
devtools::build()
devtools::document()
devtools::document()
devtools::build()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::build()
devtools::document()
devtools::build()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::test()
devtools::test()
devtools::test()
devtools::test()

stringsAsFactors = FALSE
)
#plot map
ggplot() +
geom_polygon(data = world,
aes(x=long, y = lat,
group = group)) +
coord_fixed(1.3) +
geom_point(data = labs,
aes(x = long,
y = lat,
group = aqi),
color = "yellow",
size = 1)
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_point(data = labs,
aes(x = long, y = lat, color = factor(aqi)),
size = 2) +
geom_text(data = labs, aes(x = long, y = lat, label = as.character(names)),
hjust = 1.5,
color = "orange",
size = 2) +
scale_color_manual(values = c("chartreuse2",
"gold",
"orange",
"orangered1",
"red4")) +
xlab("") +
ylab("") +
ggtitle("Current AQI in European Capitals") +
theme_void() +
theme(panel.background = element_rect(fill='ivory', colour='ivory2'),
plot.title = element_text(hjust = 0.5))
ggplot() +
geom_polygon(data = world,
aes(x=long, y = lat,
group = group)) +
coord_fixed(1.3) +
geom_point(data = labs,
aes(x = long,
y = lat,
group = aqi),
color = "yellow",
size = 1)
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_point(data = labs,
aes(x = long, y = lat, color = factor(aqi)),
size = 2) +
geom_text(data = labs, aes(x = long, y = lat, label = as.character(names)),
hjust = 1.5,
color = "orange",
size = 2) +
scale_color_manual(values = c("chartreuse2",
"gold",
"orange",
"orangered1",
"red4")) +
xlab("") +
ylab("") +
ggtitle("Current AQI in European Capitals") +
labs(fill = "Airquality Index") +
theme_void() +
theme(panel.background = element_rect(fill='ivory', colour='ivory2'),
plot.title = element_text(hjust = 0.5))
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_point(data = labs,
aes(x = long, y = lat, color = factor(aqi)),
size = 2) +
geom_text(data = labs, aes(x = long, y = lat, label = as.character(names)),
hjust = 1.5,
color = "orange",
size = 2) +
scale_color_manual(values = c("chartreuse2",
"gold",
"orange",
"orangered1",
"red4")) +
xlab("") +
ylab("") +
ggtitle("Current AQI in European Capitals") +
labs(color = "Airquality Index") +
theme_void() +
theme(panel.background = element_rect(fill='ivory', colour='ivory2'),
plot.title = element_text(hjust = 0.5))
load("~/Documents/Master/UvA/Programming Next Step/airquality/airquality/.RData")
load("~/Documents/Master/UvA/Programming Next Step/airquality/airquality/.RData")
devtools::document()
devtools::load_all()
devtools::document()
devtools::build()
devtools::document()
devtools::document()
devtools::document()
devtools::build()
devtools::document()
devtools::document()
devtools::build()
devtools::document()
devtools::build()
devtools::document()
remove.packages("airquality")
devtools::document()
devtools::build()
devtools::document()
devtools::document()
devtools::build()
devtools::document()
devtools::install()
devtools::document()
devtools::load_all()
devtools::build()
load("~/Documents/Master/UvA/Programming Next Step/airquality/airquality/.RData")
devtools::build()
devtools::document()
install.packages("devtools")
library(devtools)
install.packages("devtools,type="win.binary")
install.packages("devtools,type="win.binary"
install.packages("devtools" ,type="win.binary")
install.packages("devtools", type = "win.binary")
devtools::document()
devtools
devtools::load_all()
runApp('R/airquality_shiny.R')
devtools::load_all()
devtools::check()
devtools::with_debug()
devtools::install()
devtools::check()
library(airquality)
library(airquality)
airquality::current_aq_df()
airquality::plot_aqi_hist()
#https://eriqande.github.io/rep-res-web/lectures/making-maps-with-R.html
library(dplyr)
library(ggplot2)
library(devtools)
library(stringr)
library(maps)
library(mapdata)
library(ggmap)
library(airquality)
#read list of capital cities
city_list <- read.csv("/Users/lucas/Documents/Master/UvA/Programming Next Step/maps_test/country-capitals.csv")
#transform capital city data
city_list <- city_list[city_list$ContinentName == "Europe",]
city_list["aqi"] <- NA
city_list[3,2] <- "Andorra"
city_list[23,2] <- "Port"
city_list[24,2] <- "Vatican"
city_list[30,2] <- "Helier"
city_list[47,2] <- "Marino"
city_list[31,5] <- "KOS"
city_list<- city_list[-c(1,46, 58 ,52),]
#for loop to add aqi to city_list
for (i in 2:nrow(city_list)) {
city <- city_list[i, 2]
country <- city_list[i, 5]
print(airquality::current_aq_df(city, country)[1,2])
print(city)
city_list$aqi[i] <- airquality::current_aq_df(city, country)[1,2]
}
#creating map data
world <- map_data("world", city_list$CountryName)
#city coordinates
labs <- data.frame(
long = as.numeric(city_list$CapitalLongitude),
lat = as.numeric(city_list$CapitalLatitude),
names = as.character(city_list$CapitalName),
aqi = as.numeric(city_list$aqi),
stringsAsFactors = FALSE
)
#plot map
ggplot() +
geom_polygon(data = world,
aes(x=long, y = lat,
group = group)) +
coord_fixed(1.3) +
geom_point(data = labs,
aes(x = long,
y = lat,
group = aqi),
color = "yellow",
size = 1)
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_point(data = labs,
aes(x = long, y = lat, color = factor(aqi)),
size = 2) +
geom_text(data = labs, aes(x = long, y = lat, label = as.character(names)),
hjust = 1.5,
color = "orange",
size = 2) +
scale_color_manual(values = c("chartreuse2",
"gold",
"orange",
"orangered1",
"red4")) +
xlab("") +
ylab("") +
ggtitle("Current AQI in European Capitals") +
labs(color = "Airquality Index") +
theme_void() +
theme(panel.background = element_rect(fill='ivory', colour='ivory2'),
plot.title = element_text(hjust = 0.5))
devtools::document()
library(airquality)
airquality::aqi_map()
library(shiny); runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny.R')
?usethis::use_data()
airquality::aqi_map()
library(shiny); runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny.R')
setwd("~/Desktop")
devtools::create("local")
data <- reaed.csv("/Users/lucas/Desktop/local data/country-capitals.csv")
View(data)
data <- read("/Users/lucas/Desktop/local data/country-capitals.csv")
View(data)
data <- read("/Users/lucas/Desktop/local data/country-capitals.csv")
view(data)
data <- read.csv("/Users/lucas/Desktop/local data/country-capitals.csv")
view(data)
View(data)
devtools::document()
setwd("~/Desktop/local")
devtools::document()
devtools::build()
library(airquality)
library(airquality)
library(airquality)
airquality::aqi_map()
library(airquality)
airquality::aqi_map()
#read list of capital cities
city_list <- read.csv("/Users/lucas/Documents/Master/UvA/Programming Next Step/maps_test/country-capitals.csv")
usethis::use_data(city_list)
library(airquality)
airquality::aqi_map()
undebug()
?undebug
undebug(airquality)
undebug(aqi_map)
isdebugged()
find.debugged.functions <- function(environments=search()) {
r <- do.call("rbind", lapply(environments, function(environment.name) {
return(do.call("rbind", lapply(ls(environment.name), function(x) {
if(is.function(get(x))) {
is.d <- try(isdebugged(get(x)))
if(!(class(is.d)=="try-error")) {
return(data.frame(function.name=x, debugged=is.d))
} else { return(NULL) }
}
})))
}))
return(r)
}
find.debugged.functions <- function(environments=search()) {
r <- do.call("rbind", lapply(environments, function(environment.name) {
return(do.call("rbind", lapply(ls(environment.name), function(x) {
if(is.function(get(x))) {
is.d <- try(isdebugged(get(x)))
if(!(class(is.d)=="try-error")) {
return(data.frame(function.name=x, debugged=is.d))
} else { return(NULL) }
}
})))
}))
return(r)
}
find.debugged.functions()
df <- find.debugged.functions()
View(df)
df %>% filter(debugged == TRUE)
library(tidyverse)
df %>% filter(debugged == TRUE)
city_list <- read.csv("/Users/lucas/Documents/Master/UvA/Programming Next Step/maps_test/country-capitals.csv")
city_list <- read.csv("/Users/lucas/Documents/Master/UvA/Programming Next Step/maps_test/country-capitals.csv")
View(city_list)
devtools::document()
devtools::document()
airquality::?city_list
library(airquality)
airquality::city_list
?city_list
?airquality
library(shiny); runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny.R')
?plotOutput
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny.R')
airquality::aqi_map()
library(airquality)
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny.R')
library(airquality)
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny.R')
airquality::aqi_map()
airquality::aqi_map()
library(airquality)
library(airquality)
airquality::aqi_map()
library(airquality)
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny.R')
library(shiny); runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny.R')
airquality_app <- function(){
ui <- fluidPage(
tabsetPanel(
tabPanel("Location",
textInput(inputId = "city_in",
label = "City",
width = 200
),
textInput(inputId = "country_in",
label = "Country",
width = 200
)
),
tabPanel("Current AQ",
gt_output(outputId = "current_aq_df")
),
tabPanel("AQI History",
plotOutput(outputId = "plot_aqi_hist",
width = 1200
)
),
tabPanel("AQ Subcomponent History",
selectInput(inputId = "comp_in",
label = "Subcomponent",
choices = c("co", "no", "no2", "o3",
"so2", "pm2_5", "pm10", "nh3" ),
width = 200),
plotlyOutput(outputId = "plot_comp_hist",
width = 1200)
),
tabPanel("Current AQI Europe",
gt_output(outputId = "current_aq_table")
),
tabPanel("Current Weather",
gt_output(outputId = "current_weather")
),
tabPanel("AQI Map",
plotOutput(outputId = "aqi_map",
width = "100%",
height = "800"
)
)
)
)
server <- function(input, output) {
output$current_aq_df <- render_gt({
gt(current_aq_df(input$city_in, input$country_in))
})
output$plot_aqi_hist <- renderPlot({
plot_aqi_hist(input$city_in, input$country_in)
})
output$plot_comp_hist <- renderPlotly({
plot_comp_hist(input$city_in, input$country_in, input$comp_in)
})
output$current_aq_table <- render_gt({
current_aq_table()
})
output$current_weather <- render_gt({
current_weather(input$city_in, input$country_in)
})
output$aqi_map <- renderPlot({
aqi_map()
})
}
# Create Shiny app ----
shinyApp(ui = ui, server = server)
}
airquality_app()
devtools::document()
library(airquality)
devtools::document()
devtools::document()
library(airquality)
devtools::document()
library(airquality)
airquality::airquality_app()
airquality::airquality_app()
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
airquality::airquality_app()
?city_list
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
library(shiny)
install.packages(shinythemes)
install.packages("shinythemes")
library(shinythemes)
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
?icon
icon("home")
icon("plant")
icon("food")
icon("world")
icon("arrow")
icon("table")
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
?selectInput
?textInput
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
?icon
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
icon("apple-whole")
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
logo("sqaure-info")
logo("sqaureinfo")
logo("sqaure_info")
logo("info")
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
?tabPanel()
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
airquality::airquality_app()
?icon
icon("cloud-fog")
icon("cloud")
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
airquality::airquality_app()
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
logo("earth-europe")
icon("earth-europe")
icon("earth")
icon("lgobe")
icon("globe")
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
icon("heat")
icon("air")
icon("good")
logo
icon("info")
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
current_aq_table()
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
airquality_app()
airquality::current_aq_df()
library(airquality)
airquality::current_aq_df()
library(airquality)
airquality::airquality_app()
airquality::geocoding()
library(airquality)
airquality::airquality_app()
airquality::current_aq_df()
airquality::plot_comp_hist()
airquality::aqi_map()
library(shiny)
airquality::airquality_app()
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
library(plotly)
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
library(gt)
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
current_aq_df()
library(airquality)
airquality::current_aq_df()
airquality::geocoding()
library(shiny); runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
runApp('~/Documents/Master/UvA/Programming Next Step/shiny_app/airquality_shiny_testing.R')
